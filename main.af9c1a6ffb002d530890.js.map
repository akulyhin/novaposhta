{"version":3,"sources":["webpack:///./index.js"],"names":["search","document","querySelector","street","arr","addEventListener","debounce","e","$","ajax","type","dataType","url","data","JSON","stringify","modelName","calledMethod","methodProperties","CityName","target","value","Limit","apiKey","headers","xhrFields","withCredentials","success","texts","console","log","Addresses","result","availableTags","ref","map","city","Ref","select","Present","available","autocomplete","source","cityRef","StreetName","SettlementRef","languages","resultStreet"],"mappings":"+IAMMA,EAASC,SAASC,cAAc,SAChCC,EAASF,SAASC,cAAc,eAElCE,EAAM,GAGVJ,EAAOK,iBAAiB,QAASC,KAAS,SAACC,GAEvCC,EAAEC,KAAK,CACHC,KAAM,OACNC,SAAU,OACVC,IAAK,uCACLC,KAAMC,KAAKC,UAAU,CACnBC,UAAW,UACXC,aAAc,oBACdC,iBAAkB,CAChBC,SAAUZ,EAAEa,OAAOC,MACnB,cAAiB,GACjBC,MAAO,IAETC,OAAQ,qCAEVC,QAAS,CACP,eAAgB,oBAElBC,UAAW,CACTC,iBAAiB,GAEnBC,QAAS,SAASC,GAEhBC,QAAQC,IAAIF,GACZxB,EAAMwB,EAAMf,KAAK,GAAGkB,UAIpBvB,GAAG,WACD,IACIwB,EASR,SAAoBC,EAAe7B,GACjC,IAAM8B,EAAM9B,EAAI+B,KAAI,SAAAC,GAAI,OAAIA,EAAKC,OACzBC,EAASlC,EAAI+B,KAAI,SAAAC,GAAI,OAAIA,EAAKG,WAIpC,OAHAN,EAAgBK,EAChBT,QAAQC,IAAII,GAELD,EAfMO,CADO,GACkBpC,GACtCyB,QAAQC,IAAIE,GAEZxB,EAAG,SAAUiC,aAAa,CACxBC,OAAQV,YAgBnB,MAEHH,QAAQC,IAAI9B,EAAOqB,OAEnB,IAAIsB,EAAU,GAEd3C,EAAOK,iBAAiB,UAAU,WAChCwB,QAAQC,IAAI9B,EAAOqB,OAEnBb,EAAEC,KAAK,CACLC,KAAM,OACNC,SAAU,OACVC,IAAK,uCACLC,KAAMC,KAAKC,UAAU,CACnBC,UAAW,UACXC,aAAc,oBACdC,iBAAkB,CAChBC,SAAUnB,EAAOqB,MACjBC,MAAO,IAETC,OAAQ,qCAEVC,QAAS,CACP,eAAgB,oBAElBC,UAAW,CACTC,iBAAiB,GAEnBC,QAAS,SAAkBC,GAMzB,OAJAC,QAAQC,IAAIF,GACZe,EAAUf,EAAMf,KAAK,GAAGkB,UAAU,GAAGM,IACrCR,QAAQC,IAAIa,GAELA,QAMbxC,EAAOE,iBAAiB,QAASC,KAAS,SAACC,GAEzCsB,QAAQC,IAAI,OAAQ9B,EAAOqB,OAC3BQ,QAAQC,IAAIa,GAEZnC,EAAEC,KAAK,CACHC,KAAM,OACNC,SAAU,OACVC,IAAK,uCACLC,KAAMC,KAAKC,UAAU,CACnBC,UAAW,UACXC,aAAc,0BACdC,iBAAkB,CAChB0B,WAAYrC,EAAEa,OAAOC,MACrBwB,cAAeF,EACfG,UAAW,KACXxB,MAAO,IAETC,OAAQ,qCAEVC,QAAS,CACP,eAAgB,oBAElBC,UAAW,CACTC,iBAAiB,GAEnBC,QAAS,SAASC,GAEhBC,QAAQC,IAAIF,GACZxB,EAAMwB,EAAMf,KAAK,GAAGkB,UAIpBvB,GAAG,WACD,IACIuC,EASR,SAAoBd,EAAe7B,GAC/B,IAAMkC,EAASlC,EAAI+B,KAAI,SAAAC,GAAI,OAAIA,EAAKG,WAGpC,OAFgBD,EAXGE,CADC,EACwBpC,GAC5CyB,QAAQC,IAAIiB,GAEZvC,EAAG,eAAgBiC,aAAa,CAC9BC,OAAQK,YAcjB,O","file":"main.af9c1a6ffb002d530890.js","sourcesContent":["import './sass/styles.scss';\r\nimport debounce from 'lodash.debounce';\r\nimport './js/searchQuery.js';\r\n\r\n\r\n\r\nconst search = document.querySelector('#tags');\r\nconst street = document.querySelector('#tagsStreet');\r\n\r\nlet arr = [];\r\nlet arrStreet = [];\r\n\r\nsearch.addEventListener('input', debounce((e) => {\r\n    // console.log(e.target.value);\r\n    $.ajax({\r\n        type: 'POST',\r\n        dataType: 'json',\r\n        url: 'https://api.novaposhta.ua/v2.0/json/',\r\n        data: JSON.stringify({\r\n          modelName: 'Address',\r\n          calledMethod: 'searchSettlements',\r\n          methodProperties: {\r\n            CityName: e.target.value,\r\n            \"SettlementRef\": '',\r\n            Limit: 10\r\n          },\r\n          apiKey: 'c1be1e4c0916d85cce43b88f2a0a9fd1'\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        xhrFields: {\r\n          withCredentials: false \r\n        },\r\n        success: function(texts) {\r\n            \r\n          console.log(texts);\r\n          arr = texts.data[0].Addresses;\r\n          \r\n          // console.log(arr);\r\n\r\n          $( function() {\r\n            let availableTags = [];\r\n            let result = available(availableTags, arr);\r\n            console.log(result)\r\n        \r\n            $( \"#tags\" ).autocomplete({\r\n              source: result\r\n            });\r\n        });\r\n        \r\n        \r\n        function available (availableTags, arr) {\r\n          const ref = arr.map(city => city.Ref);\r\n            const select = arr.map(city => city.Present);\r\n            availableTags = select;\r\n            console.log(ref);\r\n            \r\n            return availableTags;\r\n        }\r\n        },\r\n      });\r\n\r\n}, 300));\r\n\r\nconsole.log(search.value);\r\n\r\nlet cityRef = '';\r\n\r\nsearch.addEventListener('change', () => {\r\n  console.log(search.value)\r\n\r\n  $.ajax({\r\n    type: 'POST',\r\n    dataType: 'json',\r\n    url: 'https://api.novaposhta.ua/v2.0/json/',\r\n    data: JSON.stringify({\r\n      modelName: 'Address',\r\n      calledMethod: 'searchSettlements',\r\n      methodProperties: {\r\n        CityName: search.value,\r\n        Limit: 10\r\n      },\r\n      apiKey: 'c1be1e4c0916d85cce43b88f2a0a9fd1'\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    xhrFields: {\r\n      withCredentials: false \r\n    },\r\n    success: function whatRef (texts) {\r\n        \r\n      console.log(texts);\r\n      cityRef = texts.data[0].Addresses[0].Ref;\r\n      console.log(cityRef);\r\n\r\n      return cityRef;\r\n    }\r\n  })\r\n})\r\n\r\n\r\nstreet.addEventListener('input', debounce((e) => {\r\n  // console.log(e.target.value);\r\n  console.log('Тест', search.value)\r\n  console.log(cityRef)\r\n\r\n  $.ajax({\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      url: 'https://api.novaposhta.ua/v2.0/json/',\r\n      data: JSON.stringify({\r\n        modelName: 'Address',\r\n        calledMethod: 'searchSettlementStreets',\r\n        methodProperties: {\r\n          StreetName: e.target.value,\r\n          SettlementRef: cityRef,\r\n          languages: 'ru',\r\n          Limit: 10\r\n        },\r\n        apiKey: 'c1be1e4c0916d85cce43b88f2a0a9fd1'\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      xhrFields: {\r\n        withCredentials: false \r\n      },\r\n      success: function(texts) {\r\n          \r\n        console.log(texts);\r\n        arr = texts.data[0].Addresses;\r\n        \r\n        // console.log(arr);\r\n\r\n        $( function() {\r\n          let availableTags = [];\r\n          let resultStreet = available(availableTags, arr);\r\n          console.log(resultStreet)\r\n      \r\n          $( \"#tagsStreet\" ).autocomplete({\r\n            source: resultStreet\r\n          });\r\n      });\r\n      \r\n      \r\n      function available (availableTags, arr) {\r\n          const select = arr.map(city => city.Present);\r\n          availableTags = select;\r\n          \r\n          return availableTags;\r\n      }\r\n      },\r\n    });\r\n\r\n}, 100))"],"sourceRoot":""}